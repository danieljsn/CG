#!/bin/python

from OpenGL.GL import *
from OpenGL.GLUT import *
from OpenGL.GLU import *

class Reta:
    def __init__(self,x1,y1,x2,y2):
        self.x1=x1
        self.y1=y1
	self.x2=x2
	self.y2=y2

retas=[]

movendo = False
posSaved = {}

def initFun():
    glClearColor(1.0,1.0,1.0,0.0)
    glColor3f(0.0,0.0, 0.0)
    glMatrixMode(GL_PROJECTION)
    glLoadIdentity()
    gluOrtho2D(0.0,640.0,0.0,480.0)
    

def displayFun():
    global retas
    glClear(GL_COLOR_BUFFER_BIT)
    glBegin(GL_LINES)
    glLineWidth(2.5)
    glColor3f(0,0,0)
    for r in retas:
        glVertex2i(r.x1,r.y1)
	glVertex2i(r.x2,r.y2)
    glEnd()
    glFlush()

def mouseFun(button,state,x,y):
    global retas
    global movendo
    global posSaved
    if button==GLUT_LEFT_BUTTON and state == GLUT_DOWN:
	if len(retas) < 2:
	     r = Reta(x,480-y,x-10,470-y)
	     retas.append(r)
        else:
             for r in retas:
		if (x == r.x1 and (480-y) == r.y1):
		     posSaved = {retas.index(r):1}
 		     movendo = True
		elif (x == r.x2 and (480-y) == r.y2):
		     posSaved = {retas.index(r):2}
		     movendo = True
        #p = Point(x,480-y)
        #points.append(p)
    if button==GLUT_RIGHT_BUTTON and state == GLUT_DOWN:
	if (movendo == True):
	     if (a.values()[0] == 1):
		retas[a.keys()[0]].x1 = x
		retas[a.keys()[0]].y1 = 480 - y
	     elif (a.values()[0] == 2):
		retas[a.keys()[0]].x2 = x
		retas[a.keys()[0]].y2 = 480 - y
    #    if len(points) != 0:
    #        points=points[:-1]
    glutPostRedisplay()
        
if __name__ == '__main__':
    glutInit()
    glutInitWindowSize(640,480)
    glutCreateWindow("Polyline")
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)
    glutDisplayFunc(displayFun)
    glutMouseFunc(mouseFun)
    initFun()
    glutMainLoop()
